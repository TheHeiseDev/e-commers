{"version":3,"file":"static/js/197.618b28b0.chunk.js","mappings":"+NA+FA,GA9EkBA,EAAAA,EAAAA,OAAK,YAAgC,IAA7BC,EAAI,EAAJA,KAClBC,GAAWC,EAAAA,EAAAA,MAWXC,GAAYH,EAAKI,MAASC,OAAOL,EAAKM,QAAQC,QAAQ,GAE5D,OACE,iBAAKC,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,aAAY,WACzB,gBAAKA,UAAU,uBAAsB,SAAC,8FACtC,gBAAKA,UAAU,oBAAmB,SAAC,8BACnC,gBAAKA,UAAU,oBAAmB,SAAC,qCACnC,gBAAKA,UAAU,kBAAiB,SAAC,uCAGnC,iBAAKA,UAAU,gBAAe,WAC5B,iBAAKA,UAAU,qBAAoB,WACjC,gBAAKA,UAAU,oBAAmB,UAChC,0BACE,gBAAKC,IAAKT,EAAKU,SAAUC,IAAKX,EAAKY,aAGvC,gBAAKJ,UAAU,qBAAoB,UACjC,SAAC,KAAI,CAACK,GAAE,qBAAgBb,EAAKc,IAAK,UAChC,eAAIN,UAAU,gBAAe,UAC3B,0BAAOR,EAAKY,kBAMpB,gBAAKJ,UAAU,sBAAqB,UAClC,iBAAKA,UAAU,yBAAwB,WACrC,iBAAKA,UAAU,iBAAgB,WAC7B,iBAAMA,UAAU,eAAc,SAAC,8BAC9BR,EAAKM,MAAM,QAEbN,EAAKe,WACJ,iBAAKP,UAAU,aAAY,WACzB,iBAAMA,UAAU,eAAc,SAAC,mEAC9BR,EAAKe,SAAS,cAKvB,gBAAKP,UAAU,sBAAqB,UAClC,iBAAKA,UAAU,gBAAe,WAC5B,iBAAMA,UAAU,eAAc,SAAC,sCAC/B,SAAC,MAAqB,CAACQ,QA/CP,WACxBf,GAASgB,EAAAA,EAAAA,IAAgBjB,EAAKkB,aAChC,KA+CU,kBAAMV,UAAU,uBAAsB,UAAER,EAAKI,MAAM,oBAEnD,SAAC,MAAkB,CAACY,QAtDL,WACvBf,GAASkB,EAAAA,EAAAA,IAAenB,EAAKkB,aAC/B,UAuDM,gBAAKV,UAAU,oBAAmB,UAChC,iBAAKA,UAAU,iBAAgB,WAC7B,iBAAMA,UAAU,eAAc,SAAC,qCAC9BL,EAAS,WAGd,oBAAQa,QAlEW,WACvBf,GAASmB,EAAAA,EAAAA,IAAYpB,EAAKc,IAC5B,EAgEyCN,UAAU,kBAAiB,WAC5D,SAAC,MAAY,IAAG,qDAM1B,I,oBCjCA,GAlDkBT,EAAAA,EAAAA,OAAK,WACrB,IAAMsB,GAAQC,EAAAA,EAAAA,IAAYC,EAAAA,IAGlBC,GAAeC,EAAAA,EAAAA,KAAfD,WAKR,OAFAE,EAAAA,EAAAA,GAAS,8CAELL,EAAMM,QAAU,GACX,eAAIC,MAAO,CAAEC,UAAW,UAAW,SAAC,qFAI3C,iBAAKrB,UAAU,GAAE,WACf,eAAIA,UAAU,eAAc,SAAC,2FAE7B,iBAAKA,UAAU,mBAAkB,WAC/B,gBAAKA,UAAU,iBAAgB,SAC5Ba,EAAMS,KAAI,SAACT,GAAK,OACf,SAAC,EAAS,CAAgBrB,KAAMqB,GAAhBA,EAAMP,GAAmB,OAG7C,iBAAKN,UAAU,iBAAgB,WAC7B,gBAAKA,UAAU,uBAAsB,SAAC,+EACtC,iBAAKA,UAAU,sBAAqB,WAClC,iBAAKA,UAAU,oBAAmB,WAChC,0BAAM,+GACN,4BAAOa,EAAMM,OAAO,WAEtB,iBAAKnB,UAAU,oBAAmB,WAChC,0BAAM,yGACN,4BAAOgB,EAAW,eAGtB,iBAAKhB,UAAU,wBAAuB,WACpC,uBAAG,6GACH,4BAAM,IAAEgB,EAAW,SAEnB,iBAAKhB,UAAU,gBAAe,WAC5B,mBAAQA,UAAU,gBAAe,SAAC,qFAClC,mBAAQA,UAAU,gBAAe,SAAC,wLAOhD,G","sources":["components/OrderItem/OrderItem.tsx","pages/FullOrder/FullOrder.tsx"],"sourcesContent":["import \"./OrderItem.css\";\nimport { AiFillDelete } from \"react-icons/ai\";\nimport { Link } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport {\n  deleteOrder,\n  minusOrderCount,\n  plusOrderCount,\n} from \"../../store/slice/orderSlice/orderSlice\";\nimport { IoRemoveCircleOutline } from \"react-icons/io5\";\nimport { IoAddCircleOutline } from \"react-icons/io5\";\nimport { FurnitureType } from \"../../store/slice/furnitureSlice/furnitueTypes\";\nimport { memo } from \"react\";\n\ninterface IOrderItemProps {\n  item: FurnitureType;\n}\nconst OrderItem = memo(({ item }: IOrderItemProps) => {\n  const dispatch = useDispatch();\n\n  const handleCartRemove = () => {\n    dispatch(deleteOrder(item.id));\n  };\n  const plusProductCount = () => {\n    dispatch(plusOrderCount(item.productCode));\n  };\n  const minusProductCount = () => {\n    dispatch(minusOrderCount(item.productCode));\n  };\n  const totalSum = (item.count! * Number(item.price)).toFixed(2);\n\n  return (\n    <div className=\"order__item-wrapper\">\n      <div className=\"cart-thead\">\n        <div className=\"cart-thead__provider\">Столплит – 1 товар</div>\n        <div className=\"cart-thead__price\">Цена</div>\n        <div className=\"cart-thead__count\">Кол-во</div>\n        <div className=\"cart-thead__sum\">Сумма</div>\n      </div>\n\n      <div className=\"product__cart\">\n        <div className=\"product__cart-link\">\n          <div className=\"product-cart__img\">\n            <div>\n              <img src={item.imageUrl} alt={item.title} />\n            </div>\n          </div>\n          <div className=\"product-cart__info\">\n            <Link to={`/furniture/${item.id}`}>\n              <h4 className=\"pbinfo__title\">\n                <span>{item.title}</span>\n              </h4>\n            </Link>\n          </div>\n        </div>\n\n        <div className=\"product-cart__price\">\n          <div className=\"cart-price__flex_order\">\n            <div className=\"price--current\">\n              <span className=\"mobile--info\">Цена:</span>\n              {item.price} $\n            </div>\n            {item.oldPrice && (\n              <div className=\"price--old\">\n                <span className=\"mobile--info\">Старая цена:</span>\n                {item.oldPrice} $\n              </div>\n            )}\n          </div>\n        </div>\n        <div className=\"product-cart__count\">\n          <div className=\"count-buttons\">\n            <span className=\"mobile--info\">Кол-во:</span>\n            <IoRemoveCircleOutline onClick={minusProductCount} />\n\n            <span className=\"count-buttons__input\">{item.count}шт.</span>\n\n            <IoAddCircleOutline onClick={plusProductCount} />\n          </div>\n        </div>\n        <div className=\"product-cart__sum\">\n          <div className=\"price--current\">\n            <span className=\"mobile--info\">Итого: </span>\n            {totalSum} $\n          </div>\n        </div>\n        <button onClick={handleCartRemove} className=\"product__delete\">\n          <AiFillDelete />\n          Удалить\n        </button>\n      </div>\n    </div>\n  );\n});\n\nexport default OrderItem;\n","import \"./FullOrder.css\";\nimport { memo } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectOrderData } from \"store/slice/orderSlice/orderSlice\";\n\nimport OrderItem from \"components/OrderItem/OrderItem\";\n\nimport { useTitle } from \"hooks/use-title\";\nimport { useCalculateTotalPrice } from \"hooks/use-totalPrice\";\n\nconst FullOrder = memo(() => {\n  const order = useSelector(selectOrderData);\n\n  // This variable sums the total cost of the items in the cart\n  const { totalPrice } = useCalculateTotalPrice();\n\n  // Set the title of the current page\n  useTitle(\"Корзина\");\n\n  if (order.length <= 0) {\n    return <h2 style={{ textAlign: \"center\" }}>Корзина пустая</h2>;\n  }\n\n  return (\n    <div className=\"\">\n      <h2 className=\"order__title\">Корзина покупок</h2>\n\n      <div className=\"order__container\">\n        <div className=\"order__wrapper\">\n          {order.map((order) => (\n            <OrderItem key={order.id} item={order} />\n          ))}\n        </div>\n        <div className=\"order__summary\">\n          <div className=\"order__summary-title\">Сводка заказа</div>\n          <div className=\"order__summary-info\">\n            <div className=\"info__total-count\">\n              <span>Количество товаров: </span>\n              <span>{order.length} </span>\n            </div>\n            <div className=\"info__total-price\">\n              <span>Стоимость товаров: </span>\n              <span>{totalPrice} $</span>\n            </div>\n          </div>\n          <div className=\"order__summary-action\">\n            <p>Итоговая стоимость</p>\n            <span> {totalPrice} $</span>\n\n            <div className=\"order__action\">\n              <button className=\"pay--is__auth\">Оформить заказ</button>\n              <button className=\"pay--is__sign\">Оформить заказ без регистрации</button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n});\n\nexport default FullOrder;\n"],"names":["memo","item","dispatch","useDispatch","totalSum","count","Number","price","toFixed","className","src","imageUrl","alt","title","to","id","oldPrice","onClick","minusOrderCount","productCode","plusOrderCount","deleteOrder","order","useSelector","selectOrderData","totalPrice","useCalculateTotalPrice","useTitle","length","style","textAlign","map"],"sourceRoot":""}